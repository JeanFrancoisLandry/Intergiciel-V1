// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace PrevostApp.Data.Models
{
    public partial class PrevostContext : DbContext
    {
        public PrevostContext()
        {
        }

        public PrevostContext(DbContextOptions<PrevostContext> options)
            : base(options)
        {
        }

        public virtual DbSet<NetDesignItem> NetDesignItem { get; set; }
        public virtual DbSet<NetDesignProductionBom> NetDesignProductionBom { get; set; }
        public virtual DbSet<NetDesignRouting> NetDesignRouting { get; set; }
        public virtual DbSet<NetSalesQuoteItem> NetSalesQuoteItem { get; set; }
        public virtual DbSet<NetSalesQuoteRelease> NetSalesQuoteRelease { get; set; }
        public virtual DbSet<RelationArticle> RelationArticle { get; set; }
        public virtual DbSet<RelationAtelier> RelationAtelier { get; set; }
        public virtual DbSet<RelationConfigurationCouleur> RelationConfigurationCouleur { get; set; }
        public virtual DbSet<RelationItemCategoryCode> RelationItemCategoryCode { get; set; }
        public virtual DbSet<RelationPosteDeTravail> RelationPosteDeTravail { get; set; }
        public virtual DbSet<StageBesoinMateriel> StageBesoinMateriel { get; set; }
        public virtual DbSet<StageBesoinMaterielParent> StageBesoinMaterielParent { get; set; }
        public virtual DbSet<StageDetailDescriptionProject> StageDetailDescriptionProject { get; set; }
        public virtual DbSet<StageDetailProject> StageDetailProject { get; set; }
        public virtual DbSet<StageEmploye> StageEmploye { get; set; }
        public virtual DbSet<StageGroupes> StageGroupes { get; set; }
        public virtual DbSet<StageLotMiseEnProductionProjet> StageLotMiseEnProductionProjet { get; set; }
        public virtual DbSet<StageMainOeuvreOptimization> StageMainOeuvreOptimization { get; set; }
        public virtual DbSet<StageMainOeuvrePoste> StageMainOeuvrePoste { get; set; }
        public virtual DbSet<StageMainOeuvreProjet> StageMainOeuvreProjet { get; set; }
        public virtual DbSet<StageMateriel> StageMateriel { get; set; }
        public virtual DbSet<StageMaterielBase> StageMaterielBase { get; set; }
        public virtual DbSet<StageMaterielOptimization> StageMaterielOptimization { get; set; }
        public virtual DbSet<StageMaterielProject> StageMaterielProject { get; set; }
        public virtual DbSet<StageOptimisation> StageOptimisation { get; set; }
        public virtual DbSet<StagePosteDeTravail> StagePosteDeTravail { get; set; }
        public virtual DbSet<StageProjet> StageProjet { get; set; }
        public virtual DbSet<StageTempsMateriel> StageTempsMateriel { get; set; }
        public virtual DbSet<StageTypeProduits> StageTypeProduits { get; set; }
        public virtual DbSet<TraceErrorsDb> TraceErrorsDb { get; set; }
        public virtual DbSet<TraceTableIntergiciel> TraceTableIntergiciel { get; set; }
        public virtual DbSet<TraceTransactions> TraceTransactions { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<NetDesignItem>(entity =>
            {
                entity.HasKey(e => e.DesignItemNo)
                    .HasName("PK__Net_Desi__B708477F111B867C");

                entity.ToTable("Net_DesignItem");

                entity.Property(e => e.DesignItemNo).HasColumnName("Design Item No");

                entity.Property(e => e.Amperage).HasColumnType("decimal(38, 20)");

                entity.Property(e => e.Color)
                    .HasMaxLength(255)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CreationTimestamp)
                    .HasColumnName("Creation Timestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreationUser)
                    .IsRequired()
                    .HasColumnName("Creation User")
                    .HasMaxLength(255);

                entity.Property(e => e.DelicateImmersion)
                    .HasColumnName("Delicate Immersion")
                    .HasMaxLength(250)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.DesignTool).HasColumnName("Design Tool");

                entity.Property(e => e.DifficultRinsing)
                    .HasColumnName("Difficult Rinsing")
                    .HasMaxLength(250)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.EquivalentUnits)
                    .HasColumnName("Equivalent Units")
                    .HasColumnType("decimal(38, 20)");

                entity.Property(e => e.ExteriorColor)
                    .HasColumnName("Exterior Color")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Geometry)
                    .HasMaxLength(250)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Height).HasMaxLength(255);

                entity.Property(e => e.InteriorColor)
                    .HasColumnName("Interior Color")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ItemCategoryCode)
                    .HasColumnName("Item Category Code")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Language).HasMaxLength(20);

                entity.Property(e => e.LengthMm)
                    .HasColumnName("Length (mm)")
                    .HasColumnType("decimal(38, 20)");

                entity.Property(e => e.LiftType)
                    .HasColumnName("Lift Type")
                    .HasMaxLength(250)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.LongDescription)
                    .HasColumnName("Long Description")
                    .HasMaxLength(255);

                entity.Property(e => e.ModificationTimestamp)
                    .HasColumnName("Modification Timestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.ModificationUser)
                    .IsRequired()
                    .HasColumnName("Modification User")
                    .HasMaxLength(255);

                entity.Property(e => e.ProjectNo)
                    .HasColumnName("Project No")
                    .HasMaxLength(255);

                entity.Property(e => e.QtyPerRack)
                    .HasColumnName("Qty per Rack")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.QuoteNo).HasColumnName("Quote No");

                entity.Property(e => e.ShortDescription)
                    .HasColumnName("Short Description")
                    .HasMaxLength(255);

                entity.Property(e => e.SortName)
                    .HasColumnName("Sort Name")
                    .HasMaxLength(50);

                entity.Property(e => e.System).HasMaxLength(255);

                entity.Property(e => e.Width).HasMaxLength(255);
            });

            modelBuilder.Entity<NetDesignProductionBom>(entity =>
            {
                entity.HasKey(e => e.DesignBomNo)
                    .HasName("PK__Net_Desi__2E9232B64D89CBA7");

                entity.ToTable("Net_DesignProductionBOM");

                entity.Property(e => e.DesignBomNo).HasColumnName("Design BOM No");

                entity.Property(e => e.ArticleDeBase)
                    .IsRequired()
                    .HasColumnName("Article de base")
                    .HasMaxLength(255);

                entity.Property(e => e.ArticlePref)
                    .IsRequired()
                    .HasColumnName("Article PREF")
                    .HasMaxLength(255);

                entity.Property(e => e.ComponentNo)
                    .IsRequired()
                    .HasColumnName("Component No")
                    .HasMaxLength(50);

                entity.Property(e => e.ComponentType).HasColumnName("Component Type");

                entity.Property(e => e.CreationTimestamp)
                    .HasColumnName("Creation Timestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreationUser)
                    .IsRequired()
                    .HasColumnName("Creation User");

                entity.Property(e => e.DesignItemNo).HasColumnName("Design Item No");

                entity.Property(e => e.DesignTool).HasColumnName("Design Tool");

                entity.Property(e => e.ModificationTimestamp)
                    .HasColumnName("Modification Timestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.ModificationUser)
                    .IsRequired()
                    .HasColumnName("Modification User")
                    .HasMaxLength(50);

                entity.Property(e => e.ProjectNo)
                    .IsRequired()
                    .HasColumnName("Project No")
                    .HasMaxLength(20);

                entity.Property(e => e.QuantityPer)
                    .HasColumnName("Quantity per")
                    .HasColumnType("decimal(38, 20)");

                entity.Property(e => e.QuoteNo).HasColumnName("Quote No");

                entity.Property(e => e.RoutingLinkCode)
                    .IsRequired()
                    .HasColumnName("Routing Link Code")
                    .HasMaxLength(20);

                entity.Property(e => e.Scrap)
                    .HasColumnName("Scrap %")
                    .HasColumnType("decimal(38, 20)");

                entity.Property(e => e.SortName)
                    .IsRequired()
                    .HasColumnName("Sort Name")
                    .HasMaxLength(50);

                entity.Property(e => e.UnitOfMeasureCode)
                    .IsRequired()
                    .HasColumnName("Unit of Measure Code")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<NetDesignRouting>(entity =>
            {
                entity.HasKey(e => e.DesignRoutingNo)
                    .HasName("PK__Net_Desi__64F48EB574EB5CF0");

                entity.ToTable("Net_DesignRouting");

                entity.Property(e => e.DesignRoutingNo).HasColumnName("Design Routing No");

                entity.Property(e => e.CreationTimestamp)
                    .HasColumnName("Creation Timestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreationUser)
                    .IsRequired()
                    .HasColumnName("Creation User");

                entity.Property(e => e.DesignItemNo).HasColumnName("Design Item No");

                entity.Property(e => e.DesignTool).HasColumnName("Design Tool");

                entity.Property(e => e.ModificationTimestamp)
                    .HasColumnName("Modification Timestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.ModificationUser)
                    .IsRequired()
                    .HasColumnName("Modification User");

                entity.Property(e => e.OperationNo).HasColumnName("Operation No");

                entity.Property(e => e.ProjectNo)
                    .IsRequired()
                    .HasColumnName("Project No")
                    .HasMaxLength(20);

                entity.Property(e => e.QuoteNo).HasColumnName("Quote No");

                entity.Property(e => e.RoutingLinkCode)
                    .IsRequired()
                    .HasColumnName("Routing Link Code");

                entity.Property(e => e.RunTime)
                    .IsRequired()
                    .HasColumnName("Run Time");

                entity.Property(e => e.SetUpTime)
                    .IsRequired()
                    .HasColumnName("SetUp Time");

                entity.Property(e => e.WorkCenterNo)
                    .IsRequired()
                    .HasColumnName("Work Center No")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<NetSalesQuoteItem>(entity =>
            {
                entity.HasKey(e => e.SalesQuoteItemNo)
                    .HasName("PK__Net_Sale__D62DB9D2E72C1C00");

                entity.ToTable("Net_SalesQuoteItem");

                entity.Property(e => e.SalesQuoteItemNo).HasColumnName("Sales Quote Item No");

                entity.Property(e => e.CreationTimestamp)
                    .HasColumnName("Creation Timestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreationUser)
                    .IsRequired()
                    .HasColumnName("Creation User")
                    .HasMaxLength(255);

                entity.Property(e => e.DesignTool).HasColumnName("Design Tool");

                entity.Property(e => e.ItemNo)
                    .HasColumnName("Item No")
                    .HasMaxLength(50)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ItemType).HasColumnName("Item Type");

                entity.Property(e => e.Langue).HasMaxLength(255);

                entity.Property(e => e.LineReferenceNo).HasColumnName("Line reference No");

                entity.Property(e => e.ModificationTimestamp)
                    .HasColumnName("Modification Timestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.ModificationUser)
                    .IsRequired()
                    .HasColumnName("Modification User")
                    .HasMaxLength(255);

                entity.Property(e => e.ProjectNo)
                    .HasColumnName("Project No")
                    .HasMaxLength(20);

                entity.Property(e => e.Quantity).HasColumnType("decimal(38, 20)");

                entity.Property(e => e.SalesQuoteNo)
                    .HasColumnName("Sales Quote No")
                    .HasMaxLength(20);

                entity.Property(e => e.ShipmentDate)
                    .HasColumnName("Shipment date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UnitPrice)
                    .HasColumnName("Unit Price")
                    .HasColumnType("decimal(38, 20)");
            });

            modelBuilder.Entity<NetSalesQuoteRelease>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Net_SalesQuoteRelease");

                entity.Property(e => e.CreationTimestamp)
                    .HasColumnName("Creation Timestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreationUser)
                    .IsRequired()
                    .HasColumnName("Creation User")
                    .HasMaxLength(50);

                entity.Property(e => e.DesignTool).HasColumnName("Design Tool");

                entity.Property(e => e.LineReferenceNo).HasColumnName("Line Reference No_");

                entity.Property(e => e.ModificationTimestamp)
                    .HasColumnName("Modification Timestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.ModificationUser)
                    .IsRequired()
                    .HasColumnName("Modification User")
                    .HasMaxLength(50);

                entity.Property(e => e.ProjectNo)
                    .IsRequired()
                    .HasColumnName("Project No_")
                    .HasMaxLength(20);

                entity.Property(e => e.Quantity).HasColumnType("decimal(38, 20)");

                entity.Property(e => e.ReleaseNo).HasColumnName("Release No_");

                entity.Property(e => e.SalesQuoteNo)
                    .IsRequired()
                    .HasColumnName("Sales Quote No_")
                    .HasMaxLength(20);

                entity.Property(e => e.SalesQuoteReleaseNo)
                    .HasColumnName("Sales Quote Release No")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<RelationArticle>(entity =>
            {
                entity.ToTable("Relation_Article");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.NoArticleNav)
                    .HasColumnName("NoArticle_NAV")
                    .HasMaxLength(255);

                entity.Property(e => e.NoArticlePref)
                    .HasColumnName("NoArticle_PREF")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<RelationAtelier>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Relation_Atelier");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.NoWorkCenter)
                    .HasColumnName("No WorkCenter")
                    .HasMaxLength(255);

                entity.Property(e => e.NomAtelier)
                    .HasColumnName("Nom Atelier")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<RelationConfigurationCouleur>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Relation_ConfigurationCouleur");

                entity.Property(e => e.Couleur)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CouleurExtérieur)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CouleurInterieur)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RelationItemCategoryCode>(entity =>
            {
                entity.HasKey(e => e.NoCategory)
                    .HasName("PK__Relation__B58B78973F89AAE3");

                entity.ToTable("Relation_ItemCategoryCode");

                entity.Property(e => e.Active).HasDefaultValueSql("((1))");

                entity.Property(e => e.CatégorieBatch)
                    .HasColumnName("Catégorie Batch")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CatégorieNav)
                    .HasColumnName("Catégorie NAV")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.System)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RelationPosteDeTravail>(entity =>
            {
                entity.ToTable("Relation_PosteDeTravail");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Active).HasDefaultValueSql("((1))");

                entity.Property(e => e.AtelierNav)
                    .HasColumnName("Atelier NAV")
                    .HasMaxLength(255);

                entity.Property(e => e.CategorieProduit)
                    .HasColumnName("Categorie produit")
                    .HasMaxLength(25);

                entity.Property(e => e.Departement).HasMaxLength(255);

                entity.Property(e => e.PosteTravail).HasMaxLength(255);

                entity.Property(e => e.RoutingLinkCode)
                    .HasColumnName("Routing Link Code")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<StageBesoinMateriel>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_BesoinMateriel");

                entity.Property(e => e.AutoriserAcommander).HasColumnName("AutoriserACommander");

                entity.Property(e => e.CodeBesoinProduction).HasColumnName("Code BesoinProduction");

                entity.Property(e => e.CodeDeFournisseur).HasColumnName("Code de Fournisseur");

                entity.Property(e => e.CodeEntrepot).HasColumnName("Code Entrepot");

                entity.Property(e => e.ConfigurationCouleurMaterialBrut).HasColumnName("ConfigurationCouleur MaterialBrut");

                entity.Property(e => e.DateDeCreation)
                    .HasColumnName("Date de creation")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateDeModif)
                    .HasColumnName("Date de Modif.")
                    .HasColumnType("datetime");

                entity.Property(e => e.EnsembleProduction).HasColumnName("Ensemble Production");

                entity.Property(e => e.Guid).HasColumnName("GUID");

                entity.Property(e => e.IdElement)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.Mnset).HasColumnName("MNSet");

                entity.Property(e => e.QteAcommander).HasColumnName("QteACommander");

                entity.Property(e => e.QteAescompter).HasColumnName("QteAEscompter");

                entity.Property(e => e.Reference)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsFixedLength();

                entity.Property(e => e.ReferenceBrut)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsFixedLength();
            });

            modelBuilder.Entity<StageBesoinMaterielParent>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_BesoinMaterielParent");

                entity.Property(e => e.CodeBesoinProduction).HasColumnName("Code Besoin Production");

                entity.Property(e => e.DateDeCalcul)
                    .HasColumnName("Date de calcul")
                    .HasColumnType("date");

                entity.Property(e => e.DateDeCalculUtc)
                    .HasColumnName("Date de calcul UTC")
                    .HasColumnType("date");

                entity.Property(e => e.DateDeCreation)
                    .HasColumnName("Date de creation")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateDeModif)
                    .HasColumnName("Date de Modif.")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.EnsembleProduction).HasColumnName("Ensemble Production");

                entity.Property(e => e.Mnset).HasColumnName("MNSet");

                entity.Property(e => e.TypeMnset).HasColumnName("TypeMNSet");
            });

            modelBuilder.Entity<StageDetailDescriptionProject>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_DetailDescriptionProject");

                entity.Property(e => e.Couleur)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DateCreation).HasColumnType("datetime");

                entity.Property(e => e.DateModification).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.DescriptionAuto)
                    .IsRequired()
                    .HasColumnName("Description Auto.");

                entity.Property(e => e.DescriptionProd)
                    .IsRequired()
                    .HasColumnName("Description Prod.")
                    .IsUnicode(false);

                entity.Property(e => e.Langue)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<StageDetailProject>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_DetailProject");

                entity.Property(e => e.Concept)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.CoutUnitaire).HasColumnName("Cout Unitaire");

                entity.Property(e => e.DateModifBackground)
                    .HasColumnName("Date modif. Background")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateModifMainOeuvre)
                    .HasColumnName("Date modif. Main Oeuvre")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateModifMateriel)
                    .HasColumnName("Date modif. Materiel")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.Mesures).HasMaxLength(200);

                entity.Property(e => e.NombreDeFeuille).HasColumnName("Nombre de Feuille");

                entity.Property(e => e.NombreDePoteau).HasColumnName("Nombre de Poteau");

                entity.Property(e => e.Nomenclature)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.PrixUnitaire).HasColumnName("Prix Unitaire");

                entity.Property(e => e.SousType).HasColumnName("Sous-Type");

                entity.Property(e => e.System)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsFixedLength();

                entity.Property(e => e.Type)
                    .HasMaxLength(3)
                    .IsFixedLength();

                entity.Property(e => e.TypeDeCadre).HasColumnName("Type de Cadre");
            });

            modelBuilder.Entity<StageEmploye>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_Employe");

                entity.Property(e => e.DateDeCreation)
                    .HasColumnName("Date de creation")
                    .HasColumnType("datetime");

                entity.Property(e => e.Identifiant).HasMaxLength(50);

                entity.Property(e => e.NomEmploye).HasMaxLength(100);
            });

            modelBuilder.Entity<StageGroupes>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_Groupes");

                entity.Property(e => e.DateDeCreation)
                    .HasColumnName("Date de creation")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateDeModif)
                    .HasColumnName("Date de Modif.")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(60);

                entity.Property(e => e.Nom)
                    .IsRequired()
                    .HasMaxLength(25);
            });

            modelBuilder.Entity<StageLotMiseEnProductionProjet>(entity =>
            {
                entity.HasKey(e => new { e.Numero, e.Version, e.Ordre, e.Instance, e.SousModele });

                entity.ToTable("Stage_LotMiseEnProductionProjet");

                entity.Property(e => e.DateEntreeAchat).HasColumnType("datetime");

                entity.Property(e => e.DateExpedition).HasColumnType("datetime");

                entity.Property(e => e.DateLivraison).HasColumnType("datetime");

                entity.Property(e => e.DateSortieAchat).HasColumnType("datetime");
            });

            modelBuilder.Entity<StageMainOeuvreOptimization>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_MainOeuvreOptimization");

                entity.Property(e => e.DateDeCreation)
                    .HasColumnName("Date de creation")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateDeModif)
                    .HasColumnName("Date de Modif.")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PosteTravail)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsFixedLength();
            });

            modelBuilder.Entity<StageMainOeuvrePoste>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_MainOeuvrePoste");

                entity.Property(e => e.CodePosteTravail).ValueGeneratedOnAdd();

                entity.Property(e => e.DateCreation).HasColumnType("datetime");

                entity.Property(e => e.DateModification).HasColumnType("datetime");

                entity.Property(e => e.PosteTravail)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsFixedLength();
            });

            modelBuilder.Entity<StageMainOeuvreProjet>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_MainOeuvreProjet");

                entity.Property(e => e.DateDeCreation)
                    .HasColumnName("Date de creation")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateDeModif)
                    .HasColumnName("Date de Modif.")
                    .HasColumnType("datetime");

                entity.Property(e => e.PosteTravail)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsFixedLength();
            });

            modelBuilder.Entity<StageMateriel>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_Materiel");

                entity.Property(e => e.Couleur)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DateDeCreation)
                    .HasColumnName("Date de creation")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateDeModif)
                    .HasColumnName("Date de Modif")
                    .HasColumnType("datetime");

                entity.Property(e => e.EstBom).HasColumnName("EstBOM");

                entity.Property(e => e.EstNavrelated).HasColumnName("EstNAVRelated");

                entity.Property(e => e.NoArticleNav)
                    .HasColumnName("NoArticle_NAV")
                    .HasMaxLength(50);

                entity.Property(e => e.NoArticlePref)
                    .HasColumnName("NoArticle_PREF")
                    .HasMaxLength(255);

                entity.Property(e => e.Perte).HasColumnType("decimal(19, 6)");

                entity.Property(e => e.Reference)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.ReferenceBase)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsFixedLength();

                entity.Property(e => e.UdMNav)
                    .HasColumnName("UdM_NAV")
                    .HasMaxLength(10);

                entity.Property(e => e.UdMPref)
                    .HasColumnName("UdM_Pref")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<StageMaterielBase>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_MaterielBase");

                entity.Property(e => e.Auto)
                    .IsRequired()
                    .HasMaxLength(120);

                entity.Property(e => e.Classe)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsFixedLength();

                entity.Property(e => e.DateCreation).HasColumnType("datetime");

                entity.Property(e => e.DateModification).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.Famille)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsFixedLength();

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Niveau1)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.Niveau2)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.Niveau3)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.Niveau4)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.Niveau5)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.Production)
                    .IsRequired()
                    .HasMaxLength(120);

                entity.Property(e => e.ReferenceBase)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsFixedLength();

                entity.Property(e => e.RemplacePour)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsFixedLength();

                entity.Property(e => e.Role)
                    .HasMaxLength(25)
                    .IsFixedLength();

                entity.Property(e => e.TypeCalcul)
                    .HasMaxLength(15)
                    .IsFixedLength();
            });

            modelBuilder.Entity<StageMaterielOptimization>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_MaterielOptimization");

                entity.Property(e => e.AngleCoupeA).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.AngleCoupeB).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.ConfigCouleur).HasColumnName("Config. Couleur");

                entity.Property(e => e.CoteModele).HasColumnName("Cote Modele");

                entity.Property(e => e.DateDeCreation)
                    .HasColumnName("Date de creation")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateDeModif)
                    .HasColumnName("Date de Modif.")
                    .HasColumnType("datetime");

                entity.Property(e => e.Hauteur).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.LieuDeTravail).HasColumnName("Lieu de travail");

                entity.Property(e => e.Longueur).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.Poid).HasColumnType("numeric(19, 6)");

                entity.Property(e => e.QuantitéParFenêtre).HasColumnName("Quantité par fenêtre");

                entity.Property(e => e.RefOriginal)
                    .HasColumnName("Ref. Original")
                    .HasMaxLength(25);

                entity.Property(e => e.Reference)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsFixedLength();

                entity.Property(e => e.SousModele).HasColumnName("Sous-Modele");
            });

            modelBuilder.Entity<StageMaterielProject>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_MaterielProject");

                entity.Property(e => e.AngleCoupeA).HasColumnType("decimal(19, 6)");

                entity.Property(e => e.AngleCoupeB).HasColumnType("decimal(19, 6)");

                entity.Property(e => e.ConfigurationCouleur).HasColumnName("Configuration Couleur");

                entity.Property(e => e.DateDeCreation)
                    .HasColumnName("Date de creation")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateDeModif)
                    .HasColumnName("Date de Modif.")
                    .HasColumnType("datetime");

                entity.Property(e => e.Hauteur).HasColumnType("decimal(19, 6)");

                entity.Property(e => e.Longueur).HasColumnType("decimal(19, 6)");

                entity.Property(e => e.Param).HasColumnType("ntext");

                entity.Property(e => e.Poid).HasColumnType("decimal(19, 6)");

                entity.Property(e => e.Reference)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsFixedLength();
            });

            modelBuilder.Entity<StageOptimisation>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_Optimisation");

                entity.Property(e => e.CodeEntrepot).HasColumnName("Code entrepot");

                entity.Property(e => e.DateBesoinMateriel)
                    .HasColumnName("Date besoin materiel")
                    .HasColumnType("date");

                entity.Property(e => e.DateDeCalculReel)
                    .HasColumnName("Date de calcul reel")
                    .HasColumnType("date");

                entity.Property(e => e.DateDeCalculReelUtc)
                    .HasColumnName("Date de calcul reel UTC")
                    .HasColumnType("date");

                entity.Property(e => e.DateDeCreation)
                    .HasColumnName("Date de creation")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateDeDebutAtelier)
                    .HasColumnName("Date de Debut Atelier")
                    .HasColumnType("date");

                entity.Property(e => e.DateDeFin)
                    .HasColumnName("Date de fin")
                    .HasColumnType("date");

                entity.Property(e => e.DateDeFinAtelier)
                    .HasColumnName("Date de Fin Atelier")
                    .HasColumnType("date");

                entity.Property(e => e.DateDeModif)
                    .HasColumnName("Date de Modif.")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateDuCalcul)
                    .HasColumnName("Date du calcul")
                    .HasColumnType("date");

                entity.Property(e => e.DateMajStock)
                    .HasColumnName("Date MAJ stock")
                    .HasColumnType("date");

                entity.Property(e => e.DatePlanifiee)
                    .HasColumnName("Date Planifiee")
                    .HasColumnType("date");

                entity.Property(e => e.DateReelBesoinMateriel)
                    .HasColumnName("Date reel besoin materiel")
                    .HasColumnType("date");

                entity.Property(e => e.DateReelDebutAchat)
                    .HasColumnName("Date Reel Debut Achat")
                    .HasColumnType("date");

                entity.Property(e => e.DateReelFinAchat)
                    .HasColumnName("Date Reel Fin Achat")
                    .HasColumnType("date");

                entity.Property(e => e.DateReelMajMateriel)
                    .HasColumnName("Date Reel MAJ Materiel")
                    .HasColumnType("date");

                entity.Property(e => e.Description).HasMaxLength(60);

                entity.Property(e => e.DetailleePar).HasColumnName("Detaillee par");

                entity.Property(e => e.EnUtilisation).HasColumnName("En utilisation");

                entity.Property(e => e.ListeDeProduction).HasColumnName("Liste de Production");

                entity.Property(e => e.LonguePiece1).HasColumnName("Longue Piece 1");

                entity.Property(e => e.ModeTigeMultiple).HasColumnName("Mode Tige Multiple");

                entity.Property(e => e.NiveauOptimization).HasColumnName("Niveau Optimization");

                entity.Property(e => e.NonForcerTigeMax).HasColumnName("Non-Forcer Tige Max.");

                entity.Property(e => e.RabaisMateriel).HasColumnName("Rabais Materiel");

                entity.Property(e => e.SectionsUtilisees).HasColumnName("Sections Utilisees");

                entity.Property(e => e.SemainePlanifiee).HasColumnName("Semaine Planifiee");

                entity.Property(e => e.Tige1Fenetre1).HasColumnName("Tige 1 Fenetre 1");

                entity.Property(e => e.Type)
                    .HasMaxLength(25)
                    .IsFixedLength();

                entity.Property(e => e.TypeFente).HasColumnName("Type fente");
            });

            modelBuilder.Entity<StagePosteDeTravail>(entity =>
            {
                entity.ToTable("Stage_PosteDeTravail");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.DateDeCreation)
                    .HasColumnName("Date de creation")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateDeModif)
                    .HasColumnName("Date de Modif.")
                    .HasColumnType("datetime");

                entity.Property(e => e.PosteTravail).HasMaxLength(255);
            });

            modelBuilder.Entity<StageProjet>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_Projet");

                entity.Property(e => e.CodeClient).HasColumnName("Code Client");

                entity.Property(e => e.CodeUtilisateur).HasColumnName("Code Utilisateur");

                entity.Property(e => e.Contact)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CopieDeVersion).HasColumnName("Copie de version");

                entity.Property(e => e.DateCompte)
                    .HasColumnName("Date compte")
                    .HasColumnType("date");

                entity.Property(e => e.DateDAcceptation)
                    .HasColumnName("Date d'acceptation")
                    .HasColumnType("date");

                entity.Property(e => e.DateDeConfirmation)
                    .HasColumnName("Date de Confirmation")
                    .HasColumnType("date");

                entity.Property(e => e.DateDeCreation)
                    .HasColumnName("Date de creation")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateDeDecoupe)
                    .HasColumnName("Date de decoupe")
                    .HasColumnType("date");

                entity.Property(e => e.DateDeDemande)
                    .HasColumnName("Date de Demande")
                    .HasColumnType("date");

                entity.Property(e => e.DateDeLivraison)
                    .HasColumnName("Date de livraison")
                    .HasColumnType("date");

                entity.Property(e => e.DateDeModif)
                    .HasColumnName("Date de Modif.")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateDePlanif)
                    .HasColumnName("Date de planif.")
                    .HasColumnType("date");

                entity.Property(e => e.DateModifSyst)
                    .HasColumnName("Date Modif. Syst.")
                    .HasColumnType("date");

                entity.Property(e => e.EtatDeProduction).HasColumnName("Etat de production");

                entity.Property(e => e.Information)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Nom).HasMaxLength(160);

                entity.Property(e => e.NomClient)
                    .HasColumnName("Nom Client")
                    .HasMaxLength(20);

                entity.Property(e => e.NomDeVersion)
                    .IsRequired()
                    .HasColumnName("Nom de version")
                    .HasMaxLength(50);

                entity.Property(e => e.NomUtilisateur)
                    .HasColumnName("Nom Utilisateur")
                    .HasMaxLength(100);

                entity.Property(e => e.NumeroCommande)
                    .HasColumnName("Numero Commande")
                    .HasMaxLength(50);

                entity.Property(e => e.NumeroSousComm).HasColumnName("Numero Sous-Comm.");

                entity.Property(e => e.PretProduction)
                    .HasColumnName("Pret Production")
                    .HasColumnType("date");

                entity.Property(e => e.Projet)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.Reference)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<StageTempsMateriel>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_TempsMateriel");

                entity.Property(e => e.A0).HasColumnName("a0");

                entity.Property(e => e.A1).HasColumnName("a1");

                entity.Property(e => e.B0).HasColumnName("b0");

                entity.Property(e => e.B1).HasColumnName("b1");

                entity.Property(e => e.D0).HasColumnName("d0");

                entity.Property(e => e.DateCreation).HasColumnType("datetime");

                entity.Property(e => e.DateModification).HasColumnType("datetime");

                entity.Property(e => e.K0).HasColumnName("k0");

                entity.Property(e => e.K1).HasColumnName("k1");

                entity.Property(e => e.PosteTravail)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsFixedLength();

                entity.Property(e => e.ReferenceBase)
                    .IsRequired()
                    .HasColumnName("Reference Base")
                    .HasMaxLength(25)
                    .IsFixedLength();
            });

            modelBuilder.Entity<StageTypeProduits>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Stage_TypeProduits");

                entity.Property(e => e.DateDeCreation)
                    .HasColumnName("Date de creation")
                    .HasColumnType("datetime");

                entity.Property(e => e.DateDeModif)
                    .HasColumnName("Date de Modif.")
                    .HasColumnType("datetime");

                entity.Property(e => e.TypeProduit)
                    .IsRequired()
                    .HasMaxLength(25);
            });

            modelBuilder.Entity<TraceErrorsDb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Trace_ErrorsDB");

                entity.Property(e => e.ErrorDateTime).HasColumnType("datetime");

                entity.Property(e => e.ErrorId)
                    .HasColumnName("ErrorID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ErrorMessage).IsUnicode(false);

                entity.Property(e => e.ErrorProcedure).IsUnicode(false);

                entity.Property(e => e.UserName)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TraceTableIntergiciel>(entity =>
            {
                entity.HasKey(e => e.Numero)
                    .HasName("PK__Trace_Ta__7E532BC7EA9B7EBA");

                entity.ToTable("Trace_TableIntergiciel");

                entity.Property(e => e.CreateDateTime).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Nom)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.NomOriginal)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<TraceTransactions>(entity =>
            {
                entity.ToTable("Trace_Transactions");

                entity.Property(e => e.Id).ValueGeneratedNever();
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}